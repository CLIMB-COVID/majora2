openapi: 3.0.1
info:
  title: Majora
  description: |
    Malleable All-seeing Journal Of Research Artifacts

    Majora is a Django-based wet-and-dry information management system. Majora is being rapidly developed as part of the COVID-19 Genomics UK Consortium (COG-UK) response to the outbreak of SARS-CoV-2.
    <hr>
    
    # Basics
    Majora is a system that stores metadata on biological samples, sequencing runs, bioinformatics pipelines and files. These different items are referred to generally, as "artifacts". Majora is composed of three main parts:

    * a database that defines "models" that represent artifacts such as samples and files,
    * a web interface that allows access to basic metadata shared about artifacts,
    * an "API" that provides an interface for other tools and programs to view and edit information about artifacts

    This documentation is for the API. If you don't plan to write a computer program to use the API and just want to upload metadata, please refer to the documentation for the [metadata uploader](https://metadata.docs.cog-uk.io/) instead.

    ## Requests
    Note that all requests have the following mandatory keys:

    ```json
    {
        "username": 0,
        "token": 0,
    }
    ```

    Where `username` is your COG-UK CLIMB username and `token` is your secret API key.
    If you do not have access to COG-UK CLIMB, [register for a COG-UK account](https://majora.covid19.climb.ac.uk/forms/register).

    Existing users can check their key by logging in and [viewing their profile](https://majora.covid19.climb.ac.uk/accounts/profile).
    **Treat your key as securely as your password. Anyone with your key can perform API actions, as you**.
    <hr>
    
    # Important notes
    
    * Submitting a request for an artifact that already exists will allow you to change some properties of that object. The messages response will let you know if this is not the case.
    * Sending a request to update an artifact that already exists is an overwriting operation. If you submit blank fields, those fields will be irreversibly deleted from the model.
    * If metadata is missing, send a blank field or do not submit the field at all. Do not submit 'unknown' or 'null' or any other text that attempts to explain that the field is missing.
    <hr>

  version: 2.0.2
externalDocs:
  description: Majora on github
  url: 'https://github.com/SamStudio8/majora'
servers:
  - url: 'https://covid.majora.ironowl.it/api/v2/'
tags:
  - name: artifact
    description: Artifacts
  - name: process
    description: Processes
paths:
  /artifact/biosample/add/:
    post:
        tags:
        - artifact
        summary: "Add a biosample to Majora"
        description: ""
        operationId: "api.artifact.biosample.add"
        requestBody:
          description: "Biosample to be added to Majora"
          content:
            application/json:
              schema: 
                allOf: 
                  - $ref: '#/components/schemas/Request'
                  - $ref: '#/components/schemas/Biosample'
                  - $ref: '#/components/schemas/BiosampleCollection'
          required: true
        responses:
          200:
            $ref: '#/components/responses/Majora_OK'
          400:
            description: "General unauthorised or invalid query"
            content: {}
          500:
            description: "Server sad"
            content: {}
  /artifact/library/add/:
    post:
      tags:
      - artifact
      summary: "Add a sequencing library to Majora"
      description: ""
      operationId: "api.artifact.library.add"
      requestBody:
        description: "Library to be added to Majora"
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Request'
                - $ref: '#/components/schemas/Library'
      responses:
          200:
            $ref: '#/components/responses/Majora_OK'
          400:
            description: "General unauthorised or invalid query"
            content: {}
          500:
            description: "Server sad"
            content: {}
  /process/sequencing/add/:
    post:
      tags:
      - process
      summary: "Add a sequencing run to Majora"
      description: ""
      operationId: "api.process.sequencing.add"
      requestBody:
        description: "Run to be added to Majora"
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Request'
                - $ref: '#/components/schemas/Sequencing'
      responses:
          200:
            $ref: '#/components/responses/Majora_OK'
          400:
            description: "General unauthorised or invalid query"
            content: {}
          500:
            description: "Server sad"
            content: {}
components:
  responses:
    Majora_OK:
      description: "Success"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
  schemas:
    Request:
      type: object
      required:
      - username
      - token
      properties:
        username:
          type: string
          example: "majora-sam"
        token:
          type: string
          example: "6e06392f-e030-4cf9-911a-8dc9f2d4e714"
    BaseResponse:
      type: object
      properties:
        errors:
          type: integer
        warnings:
          type: integer
        messages:
          type: array
          items:
            oneOf:
              - type: string
              - type: object
          example: ["An important message", {"a_field_name": "A message about this field..."}, "Another important message..."]
          description: "A list of string or object-based messages encountered during your request."
        new:
          type: array
          items:
            type: string
          example: []
          description: "List of tuples in the format (object_type, object_uuid, object_name) for objects created as a result of your request"
        updated:
          type: array
          items:
            type: string
          example: []
          description: "List of tuples in the format (object_type, object_uuid, object_name) for objects updated as a result of your request"
        ignored: 
          type: array
          items:
            type: string
          example: []
          description: "List of UUIDs or string IDs ignored by your request due to errors"
        success:
          type: boolean
          description: "true if errors == 0"
    Biosample:
      required:
      - central_sample_id
      type: object
      properties:
        central_sample_id:
          type: string
          example: "BIRM-12345"
          description: "The centrally shared ID that you will use to refer to this sample inside the consortium."
        biosample_source_id:
          type: string
          description: |
            A unique identifier of patient or environmental sample. If you have multiple samples from the same patient, enter the FIRST central_sample_id assigned to one of their samples here.
            
              DO NOT USE AN NHS NUMBER HERE.
        root_sample_id:
          type: string
          description: "Identifier assigned to this sample from one of the health agencies (eg. PHE samples will be prefixed with H20). This is necessary for linking samples to private patient metadata later."
        sender_sample_id:
          type: string
          description: "If you are permitted, provide the identifier that was sent by your laboratory to SGSS here."
    BiosampleCollection:
      required: 
      - adm1
      - is_surveillance
      - collection_date
      type: object
      properties:
        adm1:
          type: string
          enum: ["UK-ENG", "UK-SCT", "UK-WLS", "UK-NIR"]
          example: "UK-ENG"
        adm2:
          type: string
          example: "Birmingham"
          description: "The city or county that the patient lives in (avoid abbreviations or short hand)"
        adm2_private:
          type: string
          example: "B20"
          description: "The outer postcode for the patient's home address (first half of the postcode only)"
        is_surveillance:
          type: string
          enum: ["Y", "N"]
          example: "Y"
          description: "Whether this sample was collected under the COGUK surveillance protocol."
        collection_date:
          type: string
          format: date
          example: "2020-06-03"
        received_date:
          type: string
          format: date
          example: "2020-06-04"
          description: "One may provide received_date in place of collection_date where it is unavailable."
        collecting_org:
          type: string
          description: "The site (eg. hospital or surgery) that this sample was originally collected by."
        sample_type_collected:
          type: string
          enum: ["dry swab", "swab", "sputum", "BAL", "aspirate"]
        sample_type_received:
          type: string
          enum: ["primary", "extract", "culture", "lysate"]
        source_age:
          type: integer
          example: "29"
          minimum: 0
        source_sex:
          type: string
          enum: ["F", "M", "Other"]
        swab_site:
          type: string
          enum: ["nose","throat","nose-throat","endotracheal","rectal"]
          example: "nose-throat"
          description: "Required if sample_type_collected is swab"
        is_hcw:
          type: string
          nullable: true
          enum:
            - Y
            - N
            - null
          description: "Whether the sample was collected from a healthcare worker. This includes hospital-associated workers."
        employing_hospital_name:
          type: string
          description: "If is_hcw, provide the name of the employing hospital. If you do not know the name, use HOSPITAL"
        employing_hospital_trust_or_board:
          type: string
          description: "If is_hcw, provide the name of the employing trust or board."
        is_hospital_patient:
          type: string
          nullable: true
          enum: ["Y", "N", null]
        is_icu_patient:
          type: string
          nullable: true
          enum: ["Y", "N", null]
        admitted_date:
          type: string
          format: date
        admitted_hospital_name:
          type: string
          description: "If is_hospital_patient, provide the name of the hospital. If you do not know the name, use HOSPITAL"
        admitted_hospital_trust_or_board:
          type: string
          description: "If is_hospital_patient, provide the name of the trust or board that administers the hospital the patient was admitted to."
        is_care_home_worker:
          type: string
          nullable: true
          enum: ["Y", "N", null]
        is_care_home_resident:
          type: string
          nullable: true
          enum: ["Y", "N", null]
        anonymised_care_home_code:
          type: string
          maxLength: 10
        admitted_with_covid_diagnosis:
          type: string
          nullable: true
          enum: ["Y", "N", null]
        metrics:
          $ref: '#/components/schemas/Metric'
        metadata:
          $ref: '#/components/schemas/BiosampleMetadata'
    Library:
      type: object
      required:
      - library_name
      - library_layout_config
      - library_seq_kit
      - library_seq_protocol
      - biosamples
      properties:
        library_name:
          type: string
          example: "BIRM-LIBRARY-20200322"
          description: "A unique, somewhat memorable name for your library."
        library_layout_config:
          type: string
          enum: ["SINGLE", "PAIRED"]
        library_seq_kit:
          type: string
          example: "LSK109"
        library_seq_protocol:
          type: string
          example: "LIGATION"
        library_layout_insert_length:
          type: integer
        library_layout_read_length:
          type: integer
        biosamples:
          type: array
          items:
            $ref: '#/components/schemas/LibraryBiosample'
        metadata:
          $ref: '#/components/schemas/Metadata'
    LibraryBiosample:
      type: object
      required:
      - central_sample_id
      - library_selection
      - library_source
      - library_strategy
      properties:
        central_sample_id:
          type: string
          example: "BIRM-12345"
        library_selection:
          type: string
          enum: [
            "RANDOM",
            "PCR",
            "RANDOM_PCR",
            "OTHER"
          ]
        library_source:
          type: string
          enum: [
            "GENOMIC",
            "TRANSCRIPTOMIC",
            "METAGENOMIC",
            "METATRANSCRIPTOMIC",
            "VIRAL_RNA",
            "OTHER"
          ]
        library_strategy:
          type: string
          enum: [
            "WGA",
            "WGS",
            "AMPLICON",
            "TARGETED_CAPTURE",
            "OTHER"
          ]
        library_primers:
          type: string
          example: "3"
        library_protocol:
          type: string
          example: "ARTIC-v2"
        barcode:
          type: string
          example: "02"
    Sequencing:
      type: object
      required:
      - library_name
      - runs
      properties:
        library_name:
          type: string
          example: "BIRM-LIBRARY-20200322"
          description: "The name of the library as submitted to add_library"
        runs:
          type: array
          items:
            $ref: '#/components/schemas/SequencingRun'
    SequencingRun:
      type: object
      required:
      - run_name
      - instrument_make
      - instrument_model
      properties:
        run_name:
          type: string
          description: "A unique name that corresponds to your run. Ideally, use the name generated by your sequencing instrument."
          example: "20200604_1730_X1_FAN12345_abcdef00"
        instrument_make:
          type: string
          enum: ["ILLUMINA", "OXFORD_NANOPORE", "PACIFIC_BIOSCIENCES"]
          example: "OXFORD_NANOPORE"
        instrument_model:
          type: string
          example: "GridION"
        flowcell_id:
          type: string
          example: "FAN12345"
        flowcell_type:
          example: "R10.3"
        start_time:
          type: string
          format: date-time
          example: "YYYY-MM-DD HH:MM"
        end_time:
          type: string
          format: date-time
          example: "YYYY-MM-DD HH:MM"
          
    Metric:
      type: object
      properties:
        ct:
          type: object
          properties:
            records:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/Metric_CycleThreshold'
    Metric_CycleThreshold:
      required: 
      - test_platform
      - test_kit
      - test_target
      - ct_value
      type: object
      properties:
        ct_value:
          type: number
          minimum: 0.0
        test_kit:
          type: string
          nullable: true
          enum: [
            "ALTONA",
            "ABBOTT",
            "AUSDIAGNOSTICS",
            "BOSPHORE",
            "ROCHE",
            "INHOUSE",
            "SEEGENE",
            null
          ]
        test_platform:
          type: string
          nullable: true
          enum: [
            "ALTOSTAR_AM16",
            "ABBOTT_M2000",
            "ROCHE_COBAS",
            "ROCHE_FLOW",
            "ROCHE_LIGHTCYCLER",
            "ELITE_INGENIUS",
            "CEPHEID_XPERT",
            "QIASTAT_DX",
            "AUSDIAGNOSTICS",
            "INHOUSE",
            "ALTONA",
            "PANTHER",
            "SEEGENE_NIMBUS",
            "QIAGEN_ROTORGENE",
            null
          ]
        test_target:
          type: string
          nullable: true
          enum: [
            "E",
            "N",
            "S",
            "RDRP",
            "ORF1AB",
            "ORF8",
            "RDRP+N",
            null
          ]
    Metadata:
      type: object
      additionalProperties:
        type: object
        additionalProperties: true
    BiosampleMetadata:
      allOf:
      - $ref: '#/components/schemas/Metadata'
      - type: object
        properties:
          epi:
            type: object
            required:
            - cluster
            properties:
              cluster:
                type: string
                example: "CLUSTER8"
          investigation:
            type: object
            properties:
              investigation_name:
                type: string
                example: "West Midlands HCW"
              investigation_site:
                type: string
                example: "QEHB"
              investigation_cluster:
                type: string
                example: "Ward 0"
